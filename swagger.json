{
  "openapi": "3.0.0",
  "info": {
    "title": "Headless E-commerce API",
    "version": "1.0.0",
    "description": "A comprehensive headless e-commerce backend API"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/api/cart": {
      "post": {
        "summary": "Create or get cart",
        "tags": [
          "Cart"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Existing cart token (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cart created or retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Cart"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/cart/{token}": {
      "get": {
        "summary": "Get cart by token",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Cart token"
          }
        ],
        "responses": {
          "200": {
            "description": "Cart details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Cart"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cart not found"
          }
        }
      }
    },
    "/api/cart/{token}/items": {
      "post": {
        "summary": "Add item to cart",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Cart token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "productId",
                  "variantId",
                  "quantity"
                ],
                "properties": {
                  "productId": {
                    "type": "string"
                  },
                  "variantId": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "integer",
                    "minimum": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item added to cart",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Cart"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or insufficient stock"
          },
          "404": {
            "description": "Cart or product not found"
          }
        }
      }
    },
    "/api/cart/{token}/items/{productId}/{variantId}": {
      "put": {
        "summary": "Update item quantity in cart",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Cart token"
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          },
          {
            "in": "path",
            "name": "variantId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Variant ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "quantity"
                ],
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "minimum": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item quantity updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Cart"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid quantity or insufficient stock"
          },
          "404": {
            "description": "Cart or item not found"
          }
        }
      },
      "delete": {
        "summary": "Remove item from cart",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Cart token"
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          },
          {
            "in": "path",
            "name": "variantId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Variant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Item removed from cart",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Cart"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cart or item not found"
          }
        }
      }
    },
    "/api/cart/{token}/clear": {
      "post": {
        "summary": "Clear cart",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Cart token"
          }
        ],
        "responses": {
          "200": {
            "description": "Cart cleared",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Cart"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cart not found"
          }
        }
      }
    },
    "/api/cart/{token}/promo": {
      "post": {
        "summary": "Apply promo code to cart",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Cart token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Promo code applied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Cart"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired promo code"
          },
          "404": {
            "description": "Cart not found"
          }
        }
      },
      "delete": {
        "summary": "Remove promo code from cart",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Cart token"
          }
        ],
        "responses": {
          "200": {
            "description": "Promo code removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Cart"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cart not found"
          }
        }
      }
    },
    "/api/catalog/products": {
      "get": {
        "summary": "Get products with filtering and pagination",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            },
            "description": "Filter by category"
          },
          {
            "in": "query",
            "name": "brand",
            "schema": {
              "type": "string"
            },
            "description": "Filter by brand"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search in product name, description, and tags"
          },
          {
            "in": "query",
            "name": "minPrice",
            "schema": {
              "type": "number"
            },
            "description": "Minimum price filter"
          },
          {
            "in": "query",
            "name": "maxPrice",
            "schema": {
              "type": "number"
            },
            "description": "Maximum price filter"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "price",
                "createdAt"
              ],
              "default": "createdAt"
            },
            "description": "Sort field"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "description": "Sort order"
          }
        ],
        "responses": {
          "200": {
            "description": "List of products with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Product"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters"
          }
        }
      }
    },
    "/api/catalog/products/{id}": {
      "get": {
        "summary": "Get product by ID",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/api/catalog/categories": {
      "get": {
        "summary": "Get all product categories",
        "tags": [
          "Catalog"
        ],
        "responses": {
          "200": {
            "description": "List of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/catalog/brands": {
      "get": {
        "summary": "Get all product brands",
        "tags": [
          "Catalog"
        ],
        "responses": {
          "200": {
            "description": "List of brands",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/catalog/search": {
      "get": {
        "summary": "Search products",
        "tags": [
          "Catalog"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search query"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Product"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing search query"
          }
        }
      }
    },
    "/api/checkout": {
      "post": {
        "summary": "Create order from cart",
        "tags": [
          "Checkout"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or insufficient stock"
          },
          "404": {
            "description": "Cart not found"
          }
        }
      }
    },
    "/api/checkout/validate": {
      "post": {
        "summary": "Validate checkout data",
        "tags": [
          "Checkout"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Checkout validation result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "isValid": {
                          "type": "boolean"
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/checkout/calculate": {
      "post": {
        "summary": "Calculate order totals",
        "tags": [
          "Checkout"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "cartId"
                ],
                "properties": {
                  "cartId": {
                    "type": "string"
                  },
                  "promoCode": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order calculation result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "subtotal": {
                          "type": "number"
                        },
                        "discount": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        },
                        "promoCode": {
                          "$ref": "#/components/schemas/PromoCode"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cart not found"
          }
        }
      }
    },
    "/api/orders": {
      "get": {
        "summary": "Get orders with filtering and pagination",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "confirmed",
                "shipped",
                "delivered",
                "cancelled"
              ]
            },
            "description": "Filter by order status"
          },
          {
            "in": "query",
            "name": "paymentStatus",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "paid",
                "failed",
                "refunded"
              ]
            },
            "description": "Filter by payment status"
          },
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter orders from this date"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter orders until this date"
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "description": "Filter by customer email"
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "orders": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Order"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/{id}": {
      "get": {
        "summary": "Get order by ID",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "put": {
        "summary": "Update order status",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/api/orders/{id}/payment": {
      "put": {
        "summary": "Update order payment status",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "paymentStatus"
                ],
                "properties": {
                  "paymentStatus": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "paid",
                      "failed",
                      "refunded"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid payment status"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/api/orders/{orderNumber}": {
      "get": {
        "summary": "Get order by order number",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orderNumber",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order number"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/api/orders/customer/{email}": {
      "get": {
        "summary": "Get orders by customer email",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Customer email"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "orders": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Order"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/analytics/overview": {
      "get": {
        "summary": "Get order analytics",
        "tags": [
          "Orders"
        ],
        "responses": {
          "200": {
            "description": "Order analytics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalOrders": {
                          "type": "number"
                        },
                        "totalRevenue": {
                          "type": "number"
                        },
                        "averageOrderValue": {
                          "type": "number"
                        },
                        "totalItems": {
                          "type": "number"
                        },
                        "statusStats": {
                          "type": "object"
                        },
                        "paymentStats": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/analytics/revenue": {
      "get": {
        "summary": "Get revenue analytics by date range",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Revenue analytics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalRevenue": {
                          "type": "number"
                        },
                        "orderCount": {
                          "type": "number"
                        },
                        "averageOrderValue": {
                          "type": "number"
                        },
                        "dailyRevenue": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/promos": {
      "get": {
        "summary": "Get promo codes with filtering and pagination",
        "tags": [
          "Promos"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "isActive",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by active status"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "percentage",
                "fixed"
              ]
            },
            "description": "Filter by promo type"
          }
        ],
        "responses": {
          "200": {
            "description": "List of promo codes with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "promoCodes": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PromoCode"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new promo code",
        "tags": [
          "Promos"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromoCodeInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Promo code created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/PromoCode"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "409": {
            "description": "Promo code already exists"
          }
        }
      }
    },
    "/api/promos/{id}": {
      "get": {
        "summary": "Get promo code by ID",
        "tags": [
          "Promos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Promo code ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Promo code details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/PromoCode"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Promo code not found"
          }
        }
      },
      "put": {
        "summary": "Update promo code",
        "tags": [
          "Promos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Promo code ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromoCodeInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Promo code updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/PromoCode"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "404": {
            "description": "Promo code not found"
          }
        }
      },
      "delete": {
        "summary": "Delete promo code",
        "tags": [
          "Promos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Promo code ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Promo code deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Promo code not found"
          }
        }
      }
    },
    "/api/promos/validate/{code}": {
      "get": {
        "summary": "Validate promo code",
        "tags": [
          "Promos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Promo code to validate"
          },
          {
            "in": "query",
            "name": "subtotal",
            "schema": {
              "type": "number"
            },
            "description": "Order subtotal for validation"
          }
        ],
        "responses": {
          "200": {
            "description": "Promo code validation result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "isValid": {
                          "type": "boolean"
                        },
                        "discount": {
                          "type": "number"
                        },
                        "promoCode": {
                          "$ref": "#/components/schemas/PromoCode"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid promo code"
          }
        }
      }
    },
    "/api/promos/analytics": {
      "get": {
        "summary": "Get promo code analytics",
        "tags": [
          "Promos"
        ],
        "responses": {
          "200": {
            "description": "Promo code analytics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalPromoCodes": {
                          "type": "number"
                        },
                        "activePromoCodes": {
                          "type": "number"
                        },
                        "totalUsage": {
                          "type": "number"
                        },
                        "averageUsage": {
                          "type": "number"
                        },
                        "typeStats": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Product ID"
          },
          "name": {
            "type": "string",
            "description": "Product name"
          },
          "description": {
            "type": "string",
            "description": "Product description"
          },
          "price": {
            "type": "number",
            "description": "Product price"
          },
          "originalPrice": {
            "type": "number",
            "description": "Original price before discount"
          },
          "category": {
            "type": "string",
            "description": "Product category"
          },
          "brand": {
            "type": "string",
            "description": "Product brand"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Product image URLs"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Product tags"
          },
          "stock": {
            "type": "integer",
            "description": "Available stock quantity"
          },
          "sku": {
            "type": "string",
            "description": "Stock keeping unit"
          },
          "weight": {
            "type": "number",
            "description": "Product weight"
          },
          "dimensions": {
            "type": "object",
            "properties": {
              "length": {
                "type": "number"
              },
              "width": {
                "type": "number"
              },
              "height": {
                "type": "number"
              }
            }
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the product is active"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "price",
          "category",
          "stock",
          "sku"
        ]
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Current page number"
          },
          "limit": {
            "type": "integer",
            "description": "Number of items per page"
          },
          "total": {
            "type": "integer",
            "description": "Total number of items"
          },
          "pages": {
            "type": "integer",
            "description": "Total number of pages"
          },
          "hasNext": {
            "type": "boolean",
            "description": "Whether there is a next page"
          },
          "hasPrev": {
            "type": "boolean",
            "description": "Whether there is a previous page"
          }
        }
      },
      "Cart": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Cart ID"
          },
          "token": {
            "type": "string",
            "description": "Cart token"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                },
                "quantity": {
                  "type": "integer"
                },
                "subtotal": {
                  "type": "number"
                }
              }
            }
          },
          "subtotal": {
            "type": "number",
            "description": "Cart subtotal"
          },
          "discount": {
            "type": "number",
            "description": "Applied discount amount"
          },
          "total": {
            "type": "number",
            "description": "Cart total after discount"
          },
          "promoCode": {
            "type": "string",
            "description": "Applied promo code"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Cart expiration date"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CartItem": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Product ID"
          },
          "quantity": {
            "type": "integer",
            "description": "Item quantity",
            "minimum": 1
          }
        }
      },
      "PromoCode": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Promo code ID"
          },
          "code": {
            "type": "string",
            "description": "Promo code"
          },
          "type": {
            "type": "string",
            "enum": [
              "percentage",
              "fixed"
            ],
            "description": "Discount type"
          },
          "value": {
            "type": "number",
            "description": "Discount value"
          },
          "minOrderAmount": {
            "type": "number",
            "description": "Minimum order amount required"
          },
          "maxUses": {
            "type": "integer",
            "description": "Maximum number of uses"
          },
          "usedCount": {
            "type": "integer",
            "description": "Number of times used"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the promo code is active"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration date"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Order ID"
          },
          "orderNumber": {
            "type": "string",
            "description": "Order number"
          },
          "customerInfo": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "address": {
                "type": "object",
                "properties": {
                  "street": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "zipCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                },
                "quantity": {
                  "type": "integer"
                },
                "subtotal": {
                  "type": "number"
                }
              }
            }
          },
          "subtotal": {
            "type": "number",
            "description": "Order subtotal"
          },
          "discount": {
            "type": "number",
            "description": "Applied discount"
          },
          "total": {
            "type": "number",
            "description": "Order total"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "confirmed",
              "shipped",
              "delivered",
              "cancelled"
            ],
            "description": "Order status"
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "pending",
              "paid",
              "failed",
              "refunded"
            ],
            "description": "Payment status"
          },
          "promoCode": {
            "type": "string",
            "description": "Applied promo code"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrderUpdateInput": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "confirmed",
              "shipped",
              "delivered",
              "cancelled"
            ],
            "description": "Order status"
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "pending",
              "paid",
              "failed",
              "refunded"
            ],
            "description": "Payment status"
          },
          "trackingNumber": {
            "type": "string",
            "description": "Shipping tracking number"
          },
          "notes": {
            "type": "string",
            "description": "Order notes"
          }
        }
      },
      "CheckoutInput": {
        "type": "object",
        "required": [
          "customerInfo",
          "items"
        ],
        "properties": {
          "token": {
            "type": "string",
            "description": "Cart token"
          },
          "customerInfo": {
            "type": "object",
            "required": [
              "name",
              "email"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Customer name"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "Customer email"
              },
              "phone": {
                "type": "string",
                "description": "Customer phone"
              },
              "address": {
                "type": "object",
                "required": [
                  "street",
                  "city",
                  "state",
                  "zipCode",
                  "country"
                ],
                "properties": {
                  "street": {
                    "type": "string",
                    "description": "Street address"
                  },
                  "city": {
                    "type": "string",
                    "description": "City"
                  },
                  "state": {
                    "type": "string",
                    "description": "State/Province"
                  },
                  "zipCode": {
                    "type": "string",
                    "description": "ZIP/Postal code"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country"
                  }
                }
              }
            }
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "productId",
                "quantity"
              ],
              "properties": {
                "productId": {
                  "type": "string",
                  "description": "Product ID"
                },
                "quantity": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "Quantity"
                }
              }
            }
          },
          "promoCode": {
            "type": "string",
            "description": "Promo code to apply"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "details": {
            "type": "object",
            "description": "Additional error details"
          }
        }
      },
      "Success": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "description": "Response data"
          },
          "message": {
            "type": "string",
            "description": "Success message"
          }
        }
      }
    }
  },
  "tags": []
}